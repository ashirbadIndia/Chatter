{"version":3,"sources":["static/avatar-white.svg","static/avatar.svg","other/history.js","apis/user.js","actions/clearMessages.js","components/user/DeleteUser.js","actions/user.js","components/user/EditPassword.js","components/user/Edit.js","components/user/Login.js","components/user/SignUp.js","components/user/index.js","components/user-list/Card.js","apis/contacts.js","actions/contacts.js","components/user-list/RecentList.js","components/user-list/FavouriteList.js","components/Welcome.js","components/conversation/header-content-extras/Modal.js","actions/chat.js","components/conversation/header-content-extras/ColorChooser.js","components/conversation/header-content-extras/ChatAction.js","components/conversation/header-content-extras/SettingDropdown.js","components/conversation/header-content-extras/UserDetail.js","components/conversation/ConversationHeader.js","components/conversation/Chat.js","components/conversation/ConversationBody.js","components/conversation/ConversationField.js","components/conversation/Conversations.js","components/Root.js","components/Header.js","components/user-list/ContactList.js","components/user-list/SearchResult.js","components/user-list/Contacts.js","components/user-list/AboutMe.js","components/App.js","reducers/index.js","reducers/searchUser.js","reducers/auth.js","reducers/contacts.js","reducers/formSubmitErrors.js","reducers/formSubmitSuccess.js","reducers/chatroom.js","index.js"],"names":["module","exports","createHashHistory","axios","create","baseURL","headers","type","DeleteUser","onSubmit","values","props","deleteUser","validation","password","userPassword","token","inputField","input","label","meta","errMsg","errorHandler","error","touched","className","htmlFor","name","successCheck","id","componentWillUnmount","clearMessages","this","handleSubmit","Field","component","passwordErr","to","React","Component","formWrapper","reduxForm","form","validate","allValues","err","userEmail","test","auth","emailId","connect","state","formSubmitErrors","delErrMsg","user","data","dispatch","a","delete","response","status","localStorage","clear","history","push","Buttons","Modal","Footer","Button","onClick","onHide","formWrap","userPasswordOld","userPasswordNew","length","userPasswordNewRe","editPassword","updateValues","errorMsg","succMsg","Form","passErrMsg","formSubmitSuccess","passSucMsg","update","patch","size","aria-labelledby","centered","Header","closeButton","Title","Body","Edit","show","setShow","bool","setState","firstName","userFirstName","lastName","userLastName","bio","userBio","editUser","inputTextArea","rows","EditPassword","initialValues","editErrMsg","editSucMsg","updatedUserInfo","Login","placeholder","login","successMessage","submitErrorMsg","loginErrMsg","loginPageSuccessMessage","post","setItem","JSON","stringify","userId","userInfo","SignUp","userBody","createUser","userPasswordR","signupErrMsg","signupSucMsg","not_exist","handleClick","src","avatar","alt","info","syncContacts","contacts","get","addContact","contactInfo","removeContact","RecentList","myId","chatRoomId","find","element","renderList","recents","map","item","Card","key","lastMessage","all","FavouriteList","favourites","Welcome","userName","componentDidMount","isSynced","getRecents","Jumbotron","fluid","Container","Row","sm","md","xs","Col","getRecentList","getFavourites","handleClose","modalHeading","modalBody","buttonsType","variant","action","socket","colors","ColorChooser","colorsList","color","changeColor","connected","emit","none","clearChat","removeUser","ChatAction","actions","i","chatId","chatRoom","SettingDropdown","modalShow","handleShow","favStat","text","removeFav","addFav","console","log","userDetail","_id","userdetail","ConversationHeader","setModalShow","st","UserDetail","isMine","pos","timestamp","title","messageBody","ConversationBody","messages","myDetail","author","message","ListGroup","ConversationField","onChange","e","target","value","preventDefault","addChat","Chat","match","params","socketConnect","socketDisconnect","componentDidUpdate","chatroom","isConnected","syncChats","style","height","io","path","on","stat","close","Root","redirect","isSignedIn","isPending","location","pathname","loading","autoLoginStats","role","margin","width","loginWithToken","userData","parse","getItem","userIcon","logout","Navbar","bg","Brand","href","Nav","ContactList","contactList","SearchResults","createContact","searchResults","Contacts","showSearchResult","search","onFocus","onBlur","searchUser","clearSearch","SearchResult","aria-label","aria-describedby","renderResults","getContacts","term","result","results","AboutMe","App","exact","Conversations","combineReducers","formReducer","filter","contact","favourite","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d48ed241.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar-white.d557e9ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.a3b899b0.svg\";","import {createHashHistory} from 'history'\n\nexport default createHashHistory();","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"/api/users\",\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});","export default ()=>{\n    return {\n        type:\"CLEAR_MESSAGES\"\n    }\n}","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {deleteUser} from '../../actions/user';\nimport clearMessages from '../../actions/clearMessages';\nimport './css/signup.css';\n\nclass DeleteUser extends React.Component{\n\n    onSubmit=(values)=>{\n        this.props.deleteUser({\n            validation: {\n                password: values.userPassword\n            }\n        },this.props.token);\n    }\n\n    inputField = ({input,label,meta,type,errMsg})=>{\n        const errorHandler=({error,touched})=>{\n            if(touched){\n                return <small className=\"text-danger\">{error}</small>\n            }\n            else return null\n        }\n        const successCheck=({error,touched})=>{\n            if(touched && error){\n                return \"is-invalid\"\n            }\n            else if(touched && !error){\n                return \"is-valid\"\n            }\n            else return null\n        }\n        return(\n            <div className=\"form-group\">\n                <label htmlFor={input.name}>{label}</label>\n                <input type={type} \n                    className={`form-control ${successCheck(meta)}`} \n                    id={input.name} \n                    {...input}\n                />\n                {(errMsg)?errorHandler({error:errMsg, touched:true}):errorHandler(meta)}\n            </div>\n        )\n    }\n    componentWillUnmount=()=>{\n        this.props.clearMessages();\n    }\n    render(){\n        return(\n            <div className=\"form\">\n                <div className=\"msg-top\">\n                    <h3>\n                    Are you sure you want to do this?\n                    </h3>\n                    <h5>\n                        Your account will be removed instantly. We will delete all your data along with all the conversations you made.\n                    </h5>\n                    <h4>\n                        To verify, enter your current password.\n                    </h4>\n                </div>\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <Field name=\"userPassword\" component={this.inputField} label=\"Enter your password\" type=\"password\"/>\n                    <small className=\"text-danger\">{this.props.passwordErr}</small>\n                    <button type=\"confirm\" className=\"btn btn-danger\">Confirm</button>\n                </form>\n                <div className=\"msg\">\n                    <p>\n                        Change of mind?{'  '}\n                    </p>\n                    <Link to=\"/\">\n                        Go back!\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst validate = (values,allValues)=>{\n    const err={};\n    // eslint-disable-next-line\n    const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    \n    if(values.userEmail && !(mailformat.test(values.userEmail))){\n        err.userEmail = `Invaild 'Email Id'`\n    }\n    else if(allValues.auth && values.userEmail && values.userEmail!==allValues.auth.emailId){\n        err.userEmail = `'Email Id' do not match`\n    }\n    return err;\n}\n\nconst formWrapper = reduxForm({\n    form: 'deleteUserForm',\n    validate: validate\n})(DeleteUser);\n\nconst mapStateToProps = (state) => {\n    return {\n        passwordErr: state.formSubmitErrors.delErrMsg,\n        auth: state.auth.user,\n        token: state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps,{deleteUser,clearMessages})(formWrapper);","import user from '../apis/user';\nimport history from '../other/history';\n\nexport const login = (auth)=> async (dispatch)=>{\n    const validation = {\n        emailId: auth.userEmail,\n        password: auth.userPassword\n    }\n\n    const response = await user.post('/auth',{validation});\n\n    if(!response.data.error.status){\n        localStorage.setItem(\n            'userData',\n            JSON.stringify({\n                userId: response.data.userInfo.id,\n                token: response.data.token\n            })\n        )\n    }\n    dispatch({\n        type: 'LOG_IN',\n        response: response.data\n    });\n}\n\nexport const logout = () => {\n    localStorage.clear();\n    return {type : 'LOG_OUT'}\n}\n\nexport const deleteUser = (data,token) => async (dispatch) =>{\n    const response = await user.delete('/',{ data: data, headers:{'Authorization' : `Bearer ${token}`}});\n    if(!response.data.error.status){\n        localStorage.clear();\n        history.push('/');\n    }\n    dispatch({\n        type: 'DELETE_USER',\n        response: response.data\n    });\n}\n\nexport const createUser = (userInfo) => async (dispatch) =>{\n    const response = await user.post('/',{userInfo});\n    if(!response.data.error.status) history.push('/login');\n    dispatch({\n        type: 'SIGN_UP',\n        response: response.data\n    })\n}\n\nexport const editUser = (update,token) => async (dispatch) =>{\n    const response = await user.patch('/',update,{\n        headers:{\n            'Authorization' : `Bearer ${token}`\n        }\n    });\n    dispatch({\n        type: 'EDIT_USER',\n        response: {\n            error: response.data.error,\n            updatedUserInfo: update.updateValues\n        }\n    })\n}\n\nexport const editPassword = (update,token) => async (dispatch) =>{\n    const response = await user.patch('/',update,{\n        headers:{\n            'Authorization' : `Bearer ${token}`\n        }\n    });\n    dispatch({\n        type: 'EDIT_PASSWORD',\n        response: {\n            error: response.data.error\n        }\n    })\n}\n\nexport const searchUser = (term) => async (dispatch) => {\n\n        var result = await user.get('/',{\n            params: {\n                term: term\n            }\n        });\n        \n        dispatch({\n            type: 'SEARCH_USER',\n            results: result.data\n        })\n}\n\nexport const clearSearch = () => {\n    return { type: \"CLEAR_SEARCH\" }\n}\n\n\nexport const loginWithToken = () => async (dispatch)=>{\n    const userData= JSON.parse(localStorage.getItem('userData'));\n    console.log(userData);\n    const token= userData ? userData.token : null;\n    console.log(token);\n    if(!token){\n        dispatch({\n            type: 'LOG_IN_WITH_TOKEN',\n            response: {\n                error: {\n                    status: true,\n                    message: 'No token stored'\n                }\n            }\n        });\n    }\n    else{\n        const response = await user.get('/auth',{\n            headers: {'Authorization' : `Bearer ${token}`}\n        });\n        console.log(response);\n        if(response.data.error.status){\n            localStorage.clear();\n        }\n        else{\n            localStorage.clear();\n            localStorage.setItem(\n            'userData',\n            JSON.stringify({\n                userId: response.data.userInfo.id,\n                token: response.data.token\n            })\n            )\n        }\n        dispatch({\n            type: 'LOG_IN_WITH_TOKEN',\n            response: {...response.data, token: response.data.token}\n        });\n    }\n    \n}\n","import React from 'react'\nimport {Modal,Button} from 'react-bootstrap'\nimport {Field, reduxForm} from 'redux-form'\nimport { connect } from 'react-redux'\n\nimport {editPassword} from '../../actions/user'\nimport './css/modal.css'\n\nconst inputField = ({input,label,meta,type})=>{\n    const errorHandler=({error,touched})=>{\n        if(touched){\n            return <small className=\"text-danger\">{error}</small>\n        }\n        else return null\n    }\n    const successCheck=({error,touched})=>{\n        if(touched && error){\n            return \"is-invalid\"\n        }\n        else if(touched && !error){\n            return \"is-valid\"\n        }\n        else return null\n    }\n    return(\n        <div className=\"form-group\">\n            <label htmlFor={input.name}>{label}</label>\n            <input type={type} \n                className={`form-control ${successCheck(meta)}`} \n                id={input.name} \n                {...input}\n            />\n            {errorHandler(meta)}\n        </div>\n    )\n}\n\nconst Buttons = (props)=>{\n  return(<Modal.Footer>\n    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n    <Button onClick={props.onHide}>Close</Button>\n  </Modal.Footer>)\n}\n\nconst form=(props)=>{\n    const onSubmit=(values)=>{\n      props.editPassword({\n        validation:{\n          password: values.userPasswordOld\n        },\n        updateValues: {\n          password: values.userPasswordNew\n        }\n      },props.token);\n    }\n    return(\n      <form onSubmit={props.handleSubmit(onSubmit)}>\n          <div className=\"body\">\n              <Field name=\"userPasswordOld\" component={inputField} label=\"Enter your old password\" type=\"password\"/>\n              <Field name=\"userPasswordNew\" component={inputField} label=\"Enter a new password\" type=\"password\"/>\n              <Field name=\"userPasswordNewRe\" component={inputField} label=\"Confirm password\" type=\"password\"/>\n              <small className=\"text-danger\">{props.errorMsg}</small>\n              <small className=\"text-success\">{props.succMsg}</small>\n              <Buttons onHide={props.onHide}/>\n          </div>\n      </form>\n    )\n}\nconst validate = (values)=>{\n  const err={};\n  if(!values.userPasswordOld){\n      err.userPasswordOld = \"This is required.\"\n  }\n  if(values.userPasswordNew && values.userPasswordNew.length < 5){\n      err.userPasswordNew = \"Password too short.\"\n  }\n  if(values.userPasswordNew !== values.userPasswordNewRe){\n      err.userPasswordNewRe = \"Password do not match.\"\n  }\n  return err;\n}\nconst formWrap = reduxForm({\n  form: 'editPassword',\n  validate\n})(form);\n\nconst mapStateToProps = (state)=>{\n  return {\n    token: state.auth.token,\n    errMsg:state.formSubmitErrors.passErrMsg,\n    succMsg:state.formSubmitSuccess.passSucMsg\n  }\n}\n\nconst Form = connect(mapStateToProps,{editPassword})(formWrap);\n\nexport default (props)=> {\n    const hide = ()=>{\n      props.onHide();\n    }\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Change Password\n          </Modal.Title>\n        </Modal.Header>\n        \n        <Modal.Body>\n        <Form onHide={hide}/>\n        \n        </Modal.Body>\n      </Modal>\n    );\n  }","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport { connect } from 'react-redux';\n\nimport './css/signup.css';\nimport {editUser} from '../../actions/user';\nimport clearMessages from '../../actions/clearMessages';\nimport EditPassword from './EditPassword';\n\nclass Edit extends React.Component{\n    state={show: false};\n    setShow = (bool)=>{\n        this.setState({show: bool});\n    }\n    onSubmit = (values) => {\n        const update = {\n            updateValues: {\n                firstName: values.userFirstName,\n                lastName: values.userLastName,\n                emailId: values.userEmail,\n                bio: values.userBio\n            },\n            validation: {\n                password: values.userPassword\n            }\n        }\n        this.props.editUser(update,this.props.token);\n    }\n    inputField = ({input,label,meta,type})=>{\n        const errorHandler=({error,touched})=>{\n            if(touched){\n                return <small className=\"text-danger\">{error}</small>\n            }\n            else return null\n        }\n        const successCheck=({error,touched})=>{\n            if(touched && error){\n                return \"is-invalid\"\n            }\n            else if(touched && !error){\n                return \"is-valid\"\n            }\n            else return null\n        }\n        return(\n            <div className=\"form-group\">\n                <label htmlFor={input.name}>{label}</label>\n                <input type={type} \n                    className={`form-control ${successCheck(meta)}`} \n                    id={input.name} \n                    {...input}\n                />\n                {errorHandler(meta)}\n            </div>\n        )\n    }\n    inputTextArea = ({input,label}) =>{\n        return(\n        <div className=\"form-group\">\n            <label htmlFor={input.name}>{label}</label>\n            <textarea className=\"form-control\" id={input.name} rows=\"3\" {...input}></textarea>\n        </div>        \n        )\n    }\n    componentWillUnmount=()=>{\n        this.props.clearMessages();\n    }\n    render(){\n        return(\n            <div className=\"form\">\n                <h3>\n                    Edit account details\n                </h3>\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <Field name=\"userFirstName\" component={this.inputField} label=\"First Name\" type=\"text\"/>\n                    <Field name=\"userLastName\" component={this.inputField} label=\"Last Name\" type=\"text\"/>\n                    <Field name=\"userEmail\" component={this.inputField} label=\"Email address\" type=\"email\"/>\n                    <Field name=\"userBio\" component={this.inputTextArea} label=\"Edit Bio\"/>\n                    <Field name=\"userPassword\" component={this.inputField} label=\"Enter your password to confirm\" type=\"password\"/> \n                    <small className=\"text-danger\">{this.props.errorMsg}</small>\n                    <small className=\"text-success\">{this.props.succMsg}</small>\n                    <button type=\"submit\" className=\"btn btn-primary\">Confirm</button>\n                </form>\n                <div className=\"msg\">\n                        <p>\n                            To change password{'  '}\n                        </p>\n                        <p className=\"link\" onClick={() => this.setShow(true)}>\n                            Click here\n                        </p>\n                </div>\n                <EditPassword\n                    show={this.state.show}\n                    onHide={() => this.setShow(false)}\n                />\n            </div>\n        )\n    }\n}\n\nconst validate = (values)=>{\n    const err={};\n    // eslint-disable-next-line\n    const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if(values.userEmail && !(mailformat.test(values.userEmail))){\n        err.userEmail = `Enter a vaild 'Email Id'`\n    }\n    if(!values.userFirstName){\n        err.userEmail = `This is Required`\n    }\n    return err;\n}\n\nconst formWrapper = reduxForm({\n    form: 'editAccountForm',\n    validate: validate\n})(Edit);\n\nconst mapStateToProps = (state)=>{\n    return {\n        initialValues: {\n            userFirstName: state.auth.user? state.auth.user.firstName:null,\n            userLastName: state.auth.user? state.auth.user.lastName:null,\n            userEmail: state.auth.user? state.auth.user.emailId:null,\n            userBio: state.auth.user? state.auth.user.bio:null\n        },\n        auth: state.auth.user,\n        token: state.auth.token,\n        errorMsg: state.formSubmitErrors.editErrMsg,\n        succMsg: state.formSubmitSuccess.editSucMsg\n    }\n}\n\nexport default connect(mapStateToProps,{editUser,clearMessages})(formWrapper);","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {login} from '../../actions/user'\nimport clearMessages from '../../actions/clearMessages'\nimport './css/login.css';\n\nclass Login extends React.Component{\n\n    inputField = ({input,label,meta,type,placeholder})=>{\n        const errorHandler=({error,touched})=>{\n            if(touched){\n                return <small className=\"text-danger\">{error}</small>\n            }\n            else return null\n        }\n        const successCheck=({error,touched})=>{\n            if(touched && error){\n                return \"is-invalid\"\n            }\n            else if(touched && !error){\n                return \"is-valid\"\n            }\n            else return null\n        }\n        return(\n            <div className=\"form-group\">\n                <label htmlFor={input.name}>{label}</label>\n                <input type={type} \n                    className={`form-control ${successCheck(meta)}`} \n                    id={input.name} \n                    placeholder={placeholder}\n                    {...input}\n                />\n                {errorHandler(meta)}\n            </div>\n        )\n    }\n    onSubmit = (values) =>{\n        this.props.login(values);\n    }\n    componentWillUnmount=()=>{\n        this.props.clearMessages();\n    }\n    render(){\n        return(\n            <div className=\"form\">\n                <h6 className=\"text-success\">{this.props.successMessage}</h6>\n                <h3>\n                    Log in to Chatter\n                </h3>\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <Field name=\"userEmail\" \n                        component={this.inputField} \n                        label=\"Email address\" \n                        type=\"email\"\n                        placeholder={'someone@email.com'}\n                        />\n                    <Field name=\"userPassword\" component={this.inputField} label=\"Password\" type=\"password\"/>\n                    <small className=\"text-danger\">{this.props.submitErrorMsg}</small>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n                <div className=\"new-account\">\n                    <p>\n                        No account?{'  '}\n                    </p>\n                    <Link to=\"/user/create\">\n                        Create a new one!\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst validate = (values)=>{\n    const err={};\n    // eslint-disable-next-line\n    const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if(values.userEmail && !(mailformat.test(values.userEmail))){\n        err.userEmail = `Enter a vaild 'Email Id'`\n    }\n    return err;\n}\n\nconst formWrapper = reduxForm({\n    form: 'loginFormValues',\n    validate: validate\n})(Login);\n\nconst mapStateToProps = (state)=>{\n    //console.log(state.auth);\n    return{\n        submitErrorMsg: state.formSubmitErrors.loginErrMsg,\n        successMessage: state.formSubmitSuccess.loginPageSuccessMessage\n    }\n}\n\nexport default connect(mapStateToProps,{login,clearMessages})(formWrapper);","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {createUser} from '../../actions/user';\nimport clearMessages from '../../actions/clearMessages';\nimport './css/signup.css';\n\nclass SignUp extends React.Component{\n\n    onSubmit=(values)=>{\n        const userBody={\n            firstName: values.userFirstName ,\n            lastName: values.userLastName?values.userLastName:\"\",\n            emailId : values.userEmail,\n            password : values.userPassword,\n            bio : values.userBio?values.userBio:\"\"\n        }\n        this.props.createUser(userBody);\n    }\n    inputField = ({input,label,meta,type,errMsg})=>{\n        const errorHandler=({error,touched})=>{\n            if(touched){\n                return <small className=\"text-danger\">{error}</small>\n            }\n            else return null\n        }\n        const successCheck=({error,touched})=>{\n            if(touched && error){\n                return \"is-invalid\"\n            }\n            else if(touched && !error){\n                return \"is-valid\"\n            }\n            else return null\n        }\n        return(\n            <div className=\"form-group\">\n                <label htmlFor={input.name}>{label}</label>\n                <input type={type} \n                    className={`form-control ${successCheck(meta)}`} \n                    id={input.name} \n                    {...input}\n                />\n                {(errMsg)?errorHandler({error:errMsg, touched:true}):errorHandler(meta)}\n            </div>\n        )\n    }\n    inputTextArea = ({input,label}) =>{\n        return(\n        <div className=\"form-group\">\n            <label htmlFor={input.name}>{label}</label>\n            <textarea className=\"form-control\" id={input.name} rows=\"3\" {...input}></textarea>\n        </div>        \n        )\n    }\n    componentWillUnmount=()=>{\n        if(!this.props.successMessage){\n            this.props.clearMessages();\n        }\n    }\n    render(){\n        return(\n            <div className=\"form\">\n                <h3>\n                    Create a new account\n                </h3>\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <Field name=\"userFirstName\" component={this.inputField} label=\"First Name\" type=\"text\"/>\n                    <Field name=\"userLastName\" component={this.inputField} label=\"Last Name\" type=\"text\"/>\n                    <Field name=\"userEmail\" component={this.inputField} label=\"Email address\" errMsg={this.props.errMsg} type=\"email\"/>\n                    <Field name=\"userPassword\" component={this.inputField} label=\"Enter a new password\" type=\"password\"/>\n                    <Field name=\"userPasswordR\" component={this.inputField} label=\"Confirm password\" type=\"password\"/>\n                    <Field name=\"userBio\" component={this.inputTextArea} label=\"Tell something more about yourself\"/>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n                <div className=\"msg\">\n                    <p>\n                        Already have a account?{'  '}\n                    </p>\n                    <Link to=\"/login\">\n                        Sign-in instead\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst validate = (values)=>{\n    const err={};\n    // eslint-disable-next-line\n    const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if(values.userPassword && values.userPassword.length < 5){\n        err.userPassword = \"Password too short\"\n    }\n    else if(values.userPasswordR !== values.userPassword){\n        err.userPasswordR = \"Password do not match\"\n    }\n    if(!values.userFirstName){\n        err.userFirstName = \"This is required\"\n    }\n    if(values.userEmail && !(mailformat.test(values.userEmail))){\n        err.userEmail = `Enter a vaild 'Email Id'`\n    }\n    return err;\n}\n\nconst formWrapper = reduxForm({\n    form: 'newAccountFormRegisters',\n    validate: validate\n})(SignUp);\n\nconst mapStateToProps = (state)=>{\n    return {\n        errMsg: state.formSubmitErrors.signupErrMsg,\n        successMessage: state.formSubmitSuccess.signupSucMsg\n    }\n}\n\nexport default connect(mapStateToProps,{createUser,clearMessages})(formWrapper);","import DeleteUser from './DeleteUser';\nimport Edit from './Edit';\nimport Login from './Login';\nimport SignUp from './SignUp';\n\nexport default {\n    DeleteUser,\n    Edit,\n    Login,\n    SignUp\n}","import React from 'react';\n\nimport avatar from '../../static/avatar.svg';\nimport './css/card.css'\n\n\nexport default (props)=>{\n    return(\n        <div className={`media user-card ${props.not_exist?\"removed\":\"\"}`} onClick={()=>{props.handleClick(props)}}>\n            <img src={props.avatar?props.avatar:avatar} className=\"align-self mr-3 avatar-sm\" alt=\"user-avatar\"/>\n            <div className=\"media-body\">\n                <h5 className=\"mt-0\">{props.firstName?`${props.firstName} ${props.lastName}`:'Do not exist'}</h5>\n                <p>{props.not_exist?'The account might have removed. Click to remove from contacts'\n                            :(props.info)?`${props.info}`:'hi there!'\n                            }</p>\n            </div>\n        </div>\n    )\n}","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"/api/contacts\",\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});","import contacts from '../apis/contacts';\n\nexport const syncContacts = (token) => async (dispatch)=> {\n    const response = await contacts.get('/',{headers: {'Authorization' : `Bearer ${token}`}});\n    dispatch({\n        type :'SYNC_CONTACTS',\n        response: response.data\n    })\n}\n\nexport const getRecents = (token) => async (dispatch)=> {\n    const response = await contacts.get('/recents',{headers: {'Authorization' : `Bearer ${token}`}});\n    dispatch({\n        type :'GET_RECENTS',\n        response: response.data\n    })\n}\n\n\nexport const addContact = (userId,token) => async (dispatch)=> {\n    const response = await contacts.post('/',\n                                {contactInfo: {id:userId}},\n                                {headers: {'Authorization' : `Bearer ${token}`}});\n    if(!response.data.error.status){\n        dispatch({\n            type :'ADD_CONTACT',\n            response: response.data\n        })\n    }\n}\n\nexport const removeContact = (contactInfo,token) => async (dispatch)=> {\n    //console.log(contactInfo,token);\n    const response = await contacts.delete('/',{\n        data:{contactInfo},\n        headers: {'Authorization' : `Bearer ${token}`}\n    });\n    if(!response.data.error.status){\n        dispatch({\n            type :'REMOVE_CONTACT',\n            contactInfo: contactInfo\n        })\n    }\n    \n}\n\nexport const removeFav = (userId,token) => async (dispatch)=> {\n    console.log('removeFav');\n    const response = await contacts.patch('/',\n        {contactInfo: {userId, favStat: false},action: \"FAVOURITE\"},\n        {headers: {'Authorization' : `Bearer ${token}`}\n    });\n    if(!response.data.error.status){\n        dispatch({\n            type :'REMOVE_FAV',\n            userId: userId\n        })\n    }\n    \n}\nexport const addFav = (userId,token) => async (dispatch)=> {\n    console.log('addFav');\n    const response = await contacts.patch('/',\n        {contactInfo: {userId, favStat: true},action: \"FAVOURITE\"},\n        {headers: {'Authorization' : `Bearer ${token}`}\n    });\n    if(!response.data.error.status){\n        dispatch({\n            type :'ADD_FAV',\n            userId: userId\n        })\n    }\n    \n}","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport history from '../../other/history'\nimport Card from './Card'\nimport {addContact} from '../../actions/contacts'\nimport './css/list.css'\n\nclass RecentList extends React.Component{\n\n    onClick=(props)=>{\n        if(!props.not_exist){\n            const userId=props.userId;\n            const myId= this.props.auth.id;\n            const chatRoomId = (myId >= userId)?`${userId}-${myId}`:`${myId}-${userId}`;\n            if(!this.props.contacts.find(element => element.userId === userId)){\n                this.props.addContact(userId,this.props.token);\n            }\n            history.push(`/chat/${chatRoomId}`);\n        }\n    }\n\n    renderList = () =>{\n        return this.props.recents.map((item)=>{\n            return(\n                <Card key={`${item.userId}`} \n                    firstName={item.firstName}\n                    lastName={item.lastName}\n                    info={item.lastMessage}\n                    id={item.userId}\n                    userId={item.userId}\n                    handleClick= {this.onClick}\n                    not_exist = {item.not_exist}\n                />\n            )\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"list-centre\">\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        recents : state.contacts.recents? state.contacts.recents : [],\n        auth: state.auth.user,\n        token: state.auth.token,\n        contacts : state.contacts.all? state.contacts.all : [],\n    }\n}\n\nexport default connect(mapStateToProps,{addContact})(RecentList);","import React from 'react';\nimport {connect} from 'react-redux';\nimport history from '../../other/history';\n\nimport Card from './Card'\nimport './css/list.css'\n\nclass FavouriteList extends React.Component{\n    onClick=(props)=>{\n        if(!props.not_exist){\n            const userId=props.userId;\n            const myId= this.props.auth.id;\n            const chatRoomId = (myId >= userId)?`${userId}-${myId}`:`${myId}-${userId}`;\n            history.push(`/chat/${chatRoomId}`);\n        }\n    }\n    renderList = this.props.favourites.map((item)=>{\n        return(\n            <Card key={`${item.userId}`} \n                    firstName={item.firstName}\n                    lastName={item.lastName}\n                    info={item.lastMessage}\n                    id={item.userId}\n                    userId={item.userId}\n                    handleClick= {this.onClick}\n                    not_exist = {item.not_exist}\n                />\n        )\n    })\n\n    render(){\n        return(\n            <div className=\"list-centre\">\n                {this.renderList}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        favourites : state.contacts.favourites? state.contacts.favourites: [],\n        auth: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(FavouriteList);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Jumbotron, Container, Row,Col} from 'react-bootstrap';\n\nimport avatar from '../static/avatar.svg';\nimport './user/css/user-detail.css';\nimport RecentList from './user-list/RecentList';\nimport FavouriteList from './user-list/FavouriteList';\nimport {syncContacts,getRecents} from '../actions/contacts';\n\nclass Welcome extends React.Component{\n    userName = this.props.auth.user?this.props.auth.user.firstName:\"\";\n    componentDidMount = ()=>{\n        if(!this.props.contacts.isSynced){\n            this.props.syncContacts(this.props.auth.token);\n        }\n        this.props.getRecents(this.props.auth.token);\n    }\n    getFavourites(){\n        if(this.props.contacts.isSynced){\n            return <FavouriteList/>\n        }\n        else return(\n            <h6>Loading...</h6>\n        )\n    }\n    getRecentList(){\n        if(this.props.contacts.isSynced){\n            return <RecentList/>\n        }\n        else return(\n            <h6>Loading...</h6>\n        )\n    }\n    render(){\n        return(\n            <>\n                <Jumbotron fluid>\n                    <div className=\"center\">\n                        <img src={avatar} className=\"avatar-large\" alt=\"user\"/>\n                        <h1 className=\"display-4 lgs\">Welcome, {this.userName}</h1>\n                        <p className=\"lead\">Don't hesitate to start conversation.</p>\n                    </div>\n                </Jumbotron>\n                <Container className=\"center\">\n                    <Row sm={1} md={2} xs={1}>\n                        <Col className=\"column\">\n                            <h1 className=\"display-4 sml\">Recent</h1>\n                            {this.getRecentList()}\n                        </Col>\n                        <Col>\n                            <h1 className=\"display-4 sml\">Favourites</h1>\n                            {this.getFavourites()}\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n        auth: state.auth,\n        contacts: state.contacts\n    }\n}\n\nexport default connect(mapStateToProps,{syncContacts,getRecents})(Welcome);","import React from 'react';\nimport {Modal,Button} from 'react-bootstrap';\n\n\nexport default (props)=>{\n    const buttons=()=>{\n        if(props.buttonsType === 'close'){\n            return(\n                <Button variant=\"secondary\" onClick={props.handleClose}>\n                    Close\n                </Button>\n            )\n        }\n        else if(props.buttonsType === 'y/n'){\n            return(\n                <>\n                <Button variant=\"secondary\" onClick={props.handleClose}>\n                    No\n                </Button>\n                <Button variant=\"danger\" onClick={()=>{\n                            props.action()\n                            props.handleClose()\n                        }\n                    }>\n                    Yes\n                </Button>\n                </>\n            )\n        }\n    }\n    return(\n        <>\n            <Modal show={props.show} onHide={props.handleClose}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                <Modal.Title>{props.modalHeading}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{props.modalBody}</Modal.Body>\n                <Modal.Footer>\n                    {buttons()}\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}","import io from 'socket.io-client'\n\nlet socket={};\n\nexport const socketConnect = (chatRoomId,token) => (dispatch)=>{\n    if(!socket.connected){\n        socket = io('http://localhost:4000/',{path:'/api/chats'});\n        socket.on('connect',()=>{\n            socket.emit('authorization',{token:token,chatRoomId:chatRoomId});\n            socket.on('verify',(stat)=>{\n                if(stat.auth){\n                    console.log('connected');\n                    dispatch({\n                        type: \"CONNECTED_TO_SOCKET\",\n                        chatRoomId: chatRoomId\n                    })\n                }\n            })\n            socket.on('receive_chats',(response)=>{\n                dispatch({\n                    type: \"GET_CHATS\",\n                    data:{\n                        userDetail: response.userDetail,\n                        messages: response.messages,\n                        myDetail: response.myDetail,\n                        color: response.color\n                    }\n                })\n            })\n    \n            socket.on('chat_added',(response)=>{\n                console.log('count');\n                dispatch({\n                    type: \"ADD_CHAT\",\n                    response: response\n                })\n            });\n            socket.on('chat_cleared',(response)=>{\n                    dispatch({\n                        type: \"CLEAR_CHAT\"\n                    })\n            })\n            \n        })\n    }\n    \n}\n\nexport const socketDisconnect = () => async (dispatch)=>{\n    if(socket.connected){\n        await socket.close();\n        console.log('disconnected');\n        dispatch({\n            type: \"DISCONNECTED_FROM_SOCKET\"\n        })\n    }\n}\n\nexport const syncChats = () => async (dispatch)=>{\n    if(socket.connected){\n        await socket.emit('get_chats');\n    }\n    dispatch({type: \"NOTHING\"});\n}\n\nexport const addChat = (message) => async (dispatch)=>{\n    if(socket.connected){\n        console.log(message);\n        await socket.emit('add_chat',message);\n    }\n    dispatch({type: \"NOTHING\"});\n}\n\nexport const clearChat = () => async (dispatch)=>{\n    if(socket.connected){\n        await socket.emit('clear_chats');\n    }\n    dispatch({type: \"NOTHING\"});\n}\n\nexport const changeColor = (color) => async (dispatch)=>{\n    if(socket.connected){\n        await socket.emit('change_color',color);\n        dispatch({\n            type: \"CHANGE_COLOR\",\n            color: color\n        })\n    }\n}","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport '../css/color-chooser.css';\nimport {changeColor} from '../../../actions/chat';\n\nconst colors= ['default','brutal-blue','dark-pink','light-pink','purple','cyan','green']\n\nclass ColorChooser extends React.Component{\n    colorsList = colors.map((color)=>{\n        return(\n            <div key={color} className=\"list-item\" onClick={()=>{this.props.changeColor(color)}}>\n                <div className={`color ${color}`}>\n                </div> \n            </div>\n        );\n    });\n    render(){\n        return(\n            <div className=\"body\">\n                {this.colorsList}\n            </div>\n        );\n    }\n}\n\nexport default connect(null,{changeColor})(ColorChooser);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Modal from './Modal';\nimport ColorChooser from './ColorChooser';\nimport {clearChat} from '../../../actions/chat';\nimport {removeContact} from '../../../actions/contacts';\nimport history from '../../../other/history'\n\n\n\nconst modalBody={\n    none:\"\",\n    clearChat:\"All conversations will be removed. This step can't be undone.\",\n    changeColor: <ColorChooser/>,\n    removeUser:\"All conversations will be removed and the user will be removed from your contact list. However He/She can again start a conversation with you.\"\n}\nconst modalHeading={\n    none:\"\",\n    clearChat:\"Are you sure to clear all conversations\",\n    changeColor:\"Change Chat color\",\n    removeUser:\"Are you sure you want to remove this user\"\n}\n\nclass ChatAction extends React.Component{ \n    actions ={\n        clearChat:()=>{\n                this.props.clearChat();\n            },\n        removeUser:()=>{\n                const contactInfo = this.props.contacts.find((i)=> i.chatId === this.props.chatId );\n                this.props.removeContact({...contactInfo},this.props.auth.token);\n                this.props.clearChat();\n                history.push('/contacts');\n            },\n    \n        changeColor:()=>{\n                \n            }\n    }\n        render(){\n            return(\n                <>\n                    <Modal\n                        show={this.props.show}\n                        modalHeading={modalHeading[this.props.action]}\n                        modalBody={modalBody[this.props.action]}\n                        handleClose={this.props.handleClose}\n                        buttonsType={this.props.action === 'changeColor'? 'close':'y/n'}\n                        action={this.actions[this.props.action]}\n                    />\n                </>\n            )\n            \n        }\n}\n\nconst mapStateToProps = (state)=>{\n    return{\n        auth: state.auth,\n        chatId: state.chatRoom.chatRoomId,\n        contacts: state.contacts.all\n    }\n}\n\nexport default connect(mapStateToProps,{clearChat,removeContact})(ChatAction);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport ChatAction from './ChatAction';\nimport {removeFav, addFav} from '../../../actions/contacts'\nimport '../css/dropdown.css';\n\nclass SettingDropdown extends React.Component{\n    state = {\n        action: 'none',\n        modalShow: false,\n    }\n    handleClose = () => this.setState({modalShow:false});\n    handleShow = () => this.setState({modalShow:true});\n    clearChat=()=>{\n        this.setState({action: 'clearChat'});\n        this.handleShow();\n    }\n    changeColor=()=>{\n        this.setState({action: 'changeColor'});\n        this.handleShow();\n    }\n    removeUser=()=>{\n        this.setState({action: 'removeUser'});\n        this.handleShow();\n    }\n    favStat=()=>{\n        const userInfo = this.props.favourites.find( item=> item.userId === this.props.userId);\n        if(userInfo){\n            return {\n                text: \"Remove from Favourites\",\n                action: ()=>{\n                    this.props.removeFav(this.props.userId,this.props.token);\n                }\n            }\n        }\n        else{\n            return {\n                text: \"Add to Favourites\",\n                action: ()=>{\n                    this.props.addFav(this.props.userId,this.props.token);\n                }\n            }\n        }\n    }\n    render(){\n        return(\n            <div className=\"dropdown\">\n                <div className=\"dropbtn\">\n                    <ion-icon name=\"settings-outline\"/>\n                </div>\n                <div className=\"dropdown-content\">\n                    <div onClick={this.changeColor}>Choose Color</div>\n                    <div onClick={this.clearChat}>Clear Chats</div>\n                    <div onClick={this.removeUser}>Remove User</div>\n                    <div onClick={this.favStat().action}>{this.favStat().text}</div>\n                </div>\n                <ChatAction \n                    show={this.state.modalShow} \n                    handleClose={this.handleClose} \n                    action={this.state.action}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    console.log(state.chatRoom.userInfo);\n    return {\n        favourites: state.contacts.favourites?state.contacts.favourites:[],\n        userId: (state.chatRoom.userDetail)?state.chatRoom.userDetail._id:null,\n        token: state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps,{removeFav,addFav})(SettingDropdown);\n\n\n\n","import React from 'react';\nimport {Modal,Button} from 'react-bootstrap';\n\nimport avatar from '../../../static/avatar.svg'\nimport '../css/user-detail.css';\nimport { connect } from 'react-redux';\n\nclass userDetail extends React.Component{\n    render(){\n\n    return(\n        <>\n        \n            <Modal\n                show = {this.props.show}\n                onHide = {this.props.onHide}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                >\n                <Modal.Header closeButton >\n                    <div className=\"m-header\">\n                        <div className=\"center\">\n                            <img src={avatar} className=\"avatar-medium\" alt=\"user\"/>\n                            <h3>{`${this.props.userdetail.firstName} ${this.props.userdetail.lastName}`}</h3>\n                            <p>{this.props.userdetail.bio}</p>\n                        </div>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"details\">\n                        <h5>\n                            Email Id:\n                        </h5>\n                        <p>\n                            {this.props.userdetail.emailId}\n                        </p>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n    }\n}\n\n\nconst mapStateToProps = (state,props)=>{\n    return {\n        userdetail: state.chatRoom.userDetail? state.chatRoom.userDetail:{\n            firstName:'',\n            lastName:'',\n            bio:'',\n            emailId:''\n        }\n    }\n}\n\nexport default connect(mapStateToProps)(userDetail);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport './css/conversation-header.css';\nimport SettingDropdown from './header-content-extras/SettingDropdown';\nimport avatar from '../../static/avatar.svg'\nimport UserDetail from './header-content-extras/UserDetail';\n\n\nclass ConversationHeader extends React.Component {\n    state = {modalShow : false}\n    setModalShow = (st)=>{\n        this.setState({modalShow: st});\n    }\n    render(){\n            return(\n                <div className=\"conversationHeader\">\n                    <div className=\"media\">\n                    <img src={avatar} className=\"align-self-center mr-3 avatar\" alt=\"avatar\"/>\n                        <div className=\"media-body\">\n                            <h4 className=\"mt-0\">\n                                {\n                                    this.props.userDetail?\n                                    `${this.props.userDetail.firstName} ${this.props.userDetail.lastName}`:\n                                    'User Name'}\n                            </h4>\n                            <p>last active</p>\n                        </div>\n                    </div>\n                    <div className=\"options\">\n                        <SettingDropdown/>\n                        <div className=\"icon\" onClick={() => this.setModalShow(true)}>\n                            <ion-icon name=\"information-circle-outline\"/>\n                        </div>\n                        <UserDetail\n                            show={this.state.modalShow}\n                            onHide={() => this.setModalShow(false)}\n                        />\n                    </div>\n                </div>\n            )\n    }\n\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n        userDetail: state.chatRoom.userDetail\n    }\n}\n\nexport default connect(mapStateToProps)(ConversationHeader);","import React from 'react'\nimport {connect} from 'react-redux';\n\nimport './css/Message.css'\n\nconst Chat = (props)=>{\n    return(\n        <div className={`message ${props.isMine?'mine':''} ${props.pos}`}>\n                <div className=\"timestamp\">\n                    {props.timestamp}\n                </div>\n            <div className=\"bubble-container\">\n              <div className={`bubble ${props.color}`} title={'friendlyTimestamp'}>\n                    {props.messageBody}\n              </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default connect()(Chat);\n\n","import React from 'react';\nimport {ListGroup} from 'react-bootstrap';\nimport {connect} from 'react-redux';\n\nimport Chat from './Chat';\n\nclass ConversationBody extends React.Component{\n    messages=()=>{\n        if(!this.props.chatRoom.messages){\n            return null;\n        }\n        else{\n            return this.props.chatRoom.messages.map((item)=>{\n                return (\n                    <Chat \n                        timestamp=\"\" \n                        isMine={this.props.chatRoom.myDetail._id === item.author?true:false /*true false*/}\n                        pos='start'\n                        messageBody={item.message}\n                        color={this.props.chatRoom.color}\n                        key={item._id}\n                        />\n                )\n            })\n        }   \n    }\n    render(){\n        return(\n            <div className=\"overflow-auto message-body\">\n                <ListGroup>\n                    {this.messages()}\n                </ListGroup>\n            </div>\n           \n        )\n    }\n}  \n\n\n\nconst mapStateToProps=(state)=>{\n    return{\n        chatRoom: state.chatRoom\n    }\n}\n\nexport default connect(mapStateToProps)(ConversationBody);","import React from 'react';\nimport {connect} from 'react-redux';\nimport './css/field.css';\nimport {addChat} from '../../actions/chat';\n\nclass ConversationField extends React.Component{\n\n  state = {text: ''};\n  onChange = (e) => {\n    this.setState({text: e.target.value});\n  }\n  onSubmit= (e)=>{\n    e.preventDefault();\n    const message = this.state.text;\n    this.setState({text: ''});\n    if(message){\n      this.props.addChat(message);\n    }\n  }\n  onClick= (e)=>{\n    const message = this.state.text;\n    this.setState({text: ''});\n    if(message){\n      this.props.addChat(message);\n    }\n  }\n  render() {\n    return(\n      <form onSubmit={this.onSubmit}>\n        <div className=\"compose\">\n        <input\n          type=\"text\"\n          className=\"compose-input\"\n          placeholder=\"Type a message, \"\n          value={this.state.text}\n          onChange={this.onChange}\n        />\n        <div className=\"toolbar-button\" onClick={this.onClick}>\n        <ion-icon name=\"send-outline\"></ion-icon>\n        </div>\n      </div>\n      </form>\n    )\n}\n} \n  \n\n\nexport default connect(null,{addChat})(ConversationField);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Container} from 'react-bootstrap';\n\nimport ConversationHeader from './ConversationHeader';\nimport ConversationBody from './ConversationBody';\nimport ConversationField from './ConversationField';\nimport {socketConnect, socketDisconnect, syncChats} from '../../actions/chat';\n\nimport './css/Messenger.css';\n\nclass Chat extends React.Component{\n    componentDidMount = async ()=>{\n        if(this.props.match.params.id){\n            await this.props.socketConnect(this.props.match.params.id,this.props.auth.token);\n        }\n    }\n    componentWillUnmount = ()=>{\n        this.props.socketDisconnect();\n    }\n    componentDidUpdate=()=>{\n        if(this.props.chatroom.isConnected && !this.props.chatroom.isSynced){\n            this.props.syncChats();\n        }\n    }\n    render(){\n        return(\n            <div>\n                <Container className='message-box' style={{height: '100vh-56px'}}>\n                    <ConversationHeader/>\n                    <ConversationBody/>\n                    <ConversationField/>\n                </Container>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n        auth: state.auth,\n        chatroom: state.chatRoom\n    }\n}\n\nexport default connect(mapStateToProps,{socketConnect,socketDisconnect,syncChats})(Chat);","import React from 'react'\nimport {connect} from 'react-redux'\nimport history from '../other/history'\nimport {loginWithToken} from '../actions/user';\n\n\n\n\nclass Root extends React.Component{\n    \n    redirect=(isSignedIn,isPending)=>{\n        if(isPending){\n            if(history.location.pathname !== '/')\n            history.push('/');\n        }\n        else if(!isSignedIn){\n            if(history.location.pathname !== '/login' && history.location.pathname !== '/user/create')\n            history.push('/login');\n        }\n        else{\n            if(history.location.pathname === '/' || history.location.pathname === '/login')\n            history.push('/welcome');\n        }\n    }\n    loading=()=>{\n        if(this.props.autoLoginStats === \"pending\"){\n            return (\n                <div className=\"spinner-border centre\" role=\"status\" style={{margin:'300px 48% auto 48%', width:'64px',height:'64px'}}>\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            )\n        }\n        else return null\n    }\n    componentDidMount = ()=>{\n        this.props.loginWithToken();\n        this.redirect(this.props.isSignedIn,this.props.autoLoginStats === \"pending\")\n    }\n    componentDidUpdate = ()=>{\n        this.redirect(this.props.isSignedIn,this.props.autoLoginStats === \"pending\")\n    }\n    render(){\n        return (\n            <>\n            {this.loading()}\n            </>\n        )\n    }\n}\n \nconst mapStateToPros=(state)=>{\n    return {\n        isSignedIn: state.auth.isSignedIn,\n        autoLoginStats : state.autoLoginStats\n    }\n}\n\nexport default connect(mapStateToPros,{loginWithToken})(Root)","import React from 'react';\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {Nav,Navbar} from 'react-bootstrap';\n\nimport avatar from '../static/avatar-white.svg';\nimport {logout} from '../actions/user';\n//import './conversation/css/dropdown.css'\n\nclass Header extends React.Component{\n\n    userIcon = ()=>{\n        if(this.props.auth.isSignedIn){\n            return(\n                <div className=\"dropdown drp-right\">\n                    <div className=\"dropbtn white\">\n                        <img src={avatar} alt=\"user-avatar\"/>\n                    </div>\n                    <div className=\"dropdown-content\">\n                        <div className=\"no-reactivity\">\n                            <small>Signed in as</small>\n                            <h5>\n                            {this.props.auth?this.props.auth.user.firstName:\"\"}\n                            </h5>\n                        </div>\n                        <Link to=\"/about-me\">About Me</Link>\n                        <Link to=\"/user/edit\">Edit Profile</Link>\n                        <Link to=\"/user/delete\">Delete Profile</Link>\n                        <div onClick={()=>{this.props.logout();}}>Sign out</div>\n                    </div>\n                </div>\n            )\n        }\n        else{\n            return null;\n        }\n\n    }\n\n    render(){\n        return(\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#welcome\">Chatter</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Link className=\"nav-link active\" to=\"/welcome\">Home</Link>\n                    <Link className=\"nav-link active\" to=\"/contacts\">Contacts</Link>\n                </Nav>\n                {this.userIcon()}\n            </Navbar>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth : state.auth\n    }\n}\n\nexport default connect(mapStateToProps,{logout})(Header);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport history from '../../other/history';\nimport Card from './Card'\nimport './css/list.css'\nimport {removeContact} from '../../actions/contacts';\n\nclass ContactList extends React.Component{\n    onClick=(props)=>{\n        if(props.not_exist){\n            this.props.removeContact({id: props.id,chatId:props.chatId},this.props.token);\n        }\n        else{\n            const userId=props.userId;\n            const myId= this.props.auth.id;\n            const chatRoomId = (myId >= userId)?`${userId}-${myId}`:`${myId}-${userId}`;\n            history.push(`/chat/${chatRoomId}`);\n        }\n    }\n    renderList = ()=>{\n        return this.props.contactList.map((item)=>{\n            console.log(item);\n            return(\n                <Card key={`${item.userId}`} \n                    firstName={item.firstName}\n                    lastName={item.lastName}\n                    info={item.bio?item.bio:''}\n                    id={item.id}\n                    userId={item.userId}\n                    chatId={item.chatId}\n                    handleClick= {this.onClick}\n                    not_exist = {item.not_exist}\n                />\n            )\n        });\n    }\n    render(){\n        return(\n            <div className=\"list-left\">\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        contactList : state.contacts.all? state.contacts.all: [],\n        auth: state.auth.user,\n        token: state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps,{removeContact})(ContactList);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Card from './Card'\nimport {addContact} from '../../actions/contacts'\nimport history from '../../other/history'\nimport './css/list.css'\n\nclass SearchResults extends React.Component{\n    \n    createContact = ({id})=>{\n        if(!this.props.contacts.find(element => element.userId === id)){\n            console.log('create_contact');\n            this.props.addContact(id,this.props.token);\n        }\n        else{\n            const userId=id;\n            const myId= this.props.auth.id;\n            const chatRoomId = (myId >= userId)?`${userId}-${myId}`:`${myId}-${userId}`;\n            history.push(`/chat/${chatRoomId}`);\n        }\n    }\n    renderList = ()=>{\n        return this.props.searchResults.map((item)=>{\n            return(\n                <Card key={`${item.userId}`} \n                    firstName={item.firstName}\n                    lastName={item.lastName}\n                    info={item.bio}\n                    id={item.id}\n                    handleClick= {this.createContact}\n                />\n            )\n        });\n    }\n\n    render(){\n        return(\n            <>\n            <h1 className=\"display-4 sml contact-title\">Results</h1>\n            <div className=\"list-left\">\n                {this.renderList()}\n                <div className='gap'/>\n            </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        searchResults : state.searchResults? state.searchResults: [],\n        auth: state.auth.user,\n        contacts: state.contacts.all,\n        token: state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps,{addContact})(SearchResults);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Container, Jumbotron} from 'react-bootstrap';\n\nimport ContactList from './ContactList';\nimport SearchResults from './SearchResult';\nimport {syncContacts} from '../../actions/contacts';\nimport {searchUser,clearSearch} from '../../actions/user'\nimport './css/list.css'\n\n\nclass Contacts extends React.Component{\n\n    state = { showSearchResult: false, search:\"\"};\n    onFocus = ()=>{\n        this.setState({showSearchResult: true});\n    }\n    onBlur = ()=>{\n        if(!this.props.searchResults.length)\n        this.setState({showSearchResult: false});\n    }\n    onChange = (e)=>{\n        this.setState({search: e.target.value});\n    }\n    renderResults(){\n        if(this.state.showSearchResult){\n            return <SearchResults />\n        }\n        else return null;\n    }\n    getContacts(){\n        if(this.props.isSynced){\n            console.log(this.props.isSynced);\n            return <ContactList/>\n        }\n        else return(\n            <h6>Loading...</h6>\n        )\n    }\n    onSubmit = (e)=>{\n        e.preventDefault();\n        this.props.searchUser(this.state.search);\n    }\n    componentDidMount = ()=>{\n        if(!this.props.isSynced){\n            if(this.props.auth.user)\n            this.props.syncContacts(this.props.auth.user.id);\n        }\n    }\n    componentWillUnmount = () =>{\n        this.props.clearSearch()\n    }\n    render(){\n        return(\n            <>\n            <Jumbotron fluid>\n                <Container>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"input-group input-group-lg\">\n                        <input type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Search users\" \n                                aria-label=\"Sizing example input\" \n                                aria-describedby=\"inputGroup-sizing-lg\"\n                                name=\"search\"\n                                value={this.state.search}\n                                onChange={this.onChange}\n                                onFocus={this.onFocus}\n                                onBlur={this.onBlur}\n                                />\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\">\n                                <ion-icon name=\"search-outline\" className=\"search-icon\"/>\n                            </span>\n                        </div>\n                    </div>\n                </form>\n                <p className=\"lead\"><br/>Search for users inside or outside your contact list. Once you initialize conversation, the user will be added to your contact list.</p>\n                </Container>\n            </Jumbotron>\n            <Container>\n                {this.renderResults()}\n                <h1 className=\"display-4 sml contact-title\">Contacts</h1>\n                {this.getContacts()}\n            </Container>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        auth: state.auth,\n        isSynced: state.contacts.isSynced,\n        searchResults: state.searchResults\n    }\n}\n\nexport default connect(mapStateToProps,{syncContacts,searchUser,clearSearch})(Contacts);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Jumbotron, Container} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nimport avatar from '../../static/avatar.svg';\nimport '../user/css/user-detail.css';\n\nclass AboutMe extends React.Component{\n\n    render(){\n        return(\n            <>\n                <Jumbotron fluid>\n                    <div className=\"center\">\n                        <img src={avatar} className=\"avatar-large\" alt=\"user\"/>\n                        <h1 className=\"display-4 lgs\">{this.props.user?`${this.props.user.firstName} ${this.props.user.lastName}`:'user-name'}</h1>\n                        <p className=\"lead\">{this.props.user?this.props.user.bio:''}</p>\n                    </div>\n                </Jumbotron>\n                <Container className=\"center\">\n                    <div className=\"details\">\n                        <h5>\n                            Email Id:\n                        </h5>\n                        <p>\n                            {this.props.user?this.props.user.emailId:''}\n                        </p>\n                    </div>\n                    <Link to=\"/user/edit\">Edit Details</Link>\n                </Container>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {\n        user: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(AboutMe);","import React from 'react';\nimport {Router,Route} from 'react-router-dom';\nimport history from '../other/history';\n\nimport user from './user';\nimport Welcome from './Welcome';\nimport Conversations from './conversation/Conversations';\nimport Root from './Root';\nimport Header from './Header';\nimport Contacts from './user-list/Contacts'\nimport AboutMe from './user-list/AboutMe'\n\nclass App extends React.Component{\n\n    render(){\n        return(\n            <div>\n                <Router history={history}>\n                    <Header/>\n                    <Route path='/' component={Root}/>\n                    <Route path='/login' exact component={user.Login}/>\n                    <Route path='/user/create' exact component={user.SignUp}/>\n                    <Route path='/user/edit' exact component={user.Edit}/>\n                    <Route path='/user/delete' exact component={user.DeleteUser}/>\n                    <Route path='/about-me' exact component={AboutMe}/>\n                    <Route path='/welcome' exact component={Welcome}/>\n                    <Route path='/contacts' exact component={Contacts}/>\n                    <Route path='/chat/:id' exact component={Conversations} />\n                </Router>\n            </div>\n        )\n    }\n}\n\n\nexport default App;","import {combineReducers} from 'redux';\nimport {reducer as formReducer} from 'redux-form';\n\nimport auth from './auth';\nimport contacts from './contacts';\nimport searchUser from './searchUser';\nimport formSubmitErrors from './formSubmitErrors';\nimport formSubmitSuccess from './formSubmitSuccess';\nimport chatroom from './chatroom';\n\nconst autoLoginStats = (state=\"pending\", action)=>{\n    if(action.type === 'LOG_IN_WITH_TOKEN'){\n        return \"resolved\"\n    }\n    else return state;\n}\n\nexport default combineReducers({\n    searchResults: searchUser,\n    auth: auth,\n    form: formReducer,\n    contacts: contacts,\n    formSubmitErrors,\n    formSubmitSuccess,\n    autoLoginStats,\n    chatRoom: chatroom\n})","export default (state=[],action)=>{\n    if(action.type === 'SEARCH_USER'){\n        return action.results;\n    }\n    if(action.type === 'CLEAR_SEARCH'){\n        return [];\n    }\n    else return state;\n}","export default (state = {isSignedIn: false}, action) =>{\n    //console.log(action.response);\n    if(action.type === 'LOG_IN' && !action.response.error.status){\n        return {\n            isSignedIn: true,\n            user: action.response.userInfo,\n            token: action.response.token\n        }\n    }\n    if(action.type === 'DELETE_USER' && !action.response.error.status){\n        return {\n            isSignedIn: false,\n        }\n    }\n    if(action.type === 'EDIT_USER'){\n        if(!action.response.error.status)\n        {\n            return {\n                    isSignedIn: state.isSignedIn,\n                    user: {...state.user, ...action.response.updatedUserInfo},\n                    token: state.token\n            }\n        }\n    }\n    if(action.type === 'LOG_OUT'){\n        return {\n            isSignedIn: false,\n        }\n    }\n    if(action.type === 'LOG_IN_WITH_TOKEN'){\n        if(!action.response.error.status){\n            return {\n                isSignedIn: true,\n                user: action.response.userInfo,\n                token: action.response.token\n            }\n        }\n        else{\n            return{\n                isSignedIn: false\n            }\n        }\n\n    }\n    else return state;\n}","\nexport default (state={isSynced:false},action )=>{\n    if(action.type === 'SYNC_CONTACTS'){\n        if(!action.response.error.status)\n        return {\n            ...state,\n            isSynced: true,\n            all: action.response.contacts,\n            favourites: action.response.contacts.filter((contact)=>contact.favourite),\n            recents: (state.recents)?state.recents:[]\n        }\n    }\n    if(action.type === 'GET_RECENTS'){\n        if(!action.response.error.status)\n        return {\n            ...state,\n            recents: action.response.recents,\n            favourites: (state.favourites)?state.favourites:[],\n            all: (state.all)?state.all:[]\n        }\n    }\n    if(action.type === 'ADD_CONTACT'){\n        return {\n            isSynced: true,\n            all: [...state.all, action.response.contactInfo],\n            favourites: (state.favourites)?state.favourites:[],\n            recents: (state.recents)?state.recents:[]\n        }\n    }\n    if(action.type === 'LOG_OUT' || action.type === 'DELETE_USER'){\n        return {\n            isSynced: false,\n            all: [],\n            favourites: [],\n            recents: []\n        }\n    }\n    if(action.type === 'REMOVE_CONTACT'){\n        return{\n            isSynced: true,\n            all: state.all.filter((item)=>{\n                return item.id !== action.contactInfo.id\n            }),\n            favourites: state.favourites.filter((item)=>item.id !== action.contactInfo.id),\n            recents: state.recents\n        }\n    }\n    if(action.type === \"ADD_FAV\"){\n        return{\n            ...state,\n            favourites: [...state.favourites, state.all.find((i)=>i.userId===action.userId) ]\n        }\n    }\n    if(action.type === \"REMOVE_FAV\"){\n        return{\n            ...state,\n            favourites: state.favourites.filter(i => i.userId !== action.userId)\n        }\n    }\n    return state;\n}\n","export default (state={},action)=>{\n    if(action.type === 'SIGN_UP' && action.response.error.status){\n        return {\n            ...state,\n            signupErrMsg: action.response.error.message\n        }\n    }\n    if(action.type === 'DELETE_USER')\n    {   \n        if(action.response.error.status){\n            return {...state,\n                delErrMsg: action.response.error.message\n            }\n        }\n        else{\n            return {...state,\n                delErrMsg: null\n            }\n        }\n        \n    }\n    if(action.type === 'EDIT_USER'){\n        if(action.response.error.status)\n        {\n            return {...state,\n                editErrMsg: action.response.error.message\n            }\n        }\n        else if(!action.response.error.status)\n        {\n            return {...state,\n                editErrMsg: null\n            }\n        }\n    }\n    if(action.type === 'EDIT_PASSWORD'){\n        if(action.response.error.status)\n        {\n            return {...state,\n                passErrMsg: action.response.error.message\n            }\n        }\n        else if(!action.response.error.status)\n        {\n            return {...state,\n                passErrMsg: null\n            }\n        }\n    }\n    if(action.type === 'LOG_IN' && action.response.error.status){\n        return {\n            ...state,\n            loginErrMsg: action.response.error.message\n        }\n    }\n    if(action.type === 'CLEAR_MESSAGES'){\n        return{}\n    }\n    return state;\n}","export default (state={},action)=>{\n    if(action.type === 'EDIT_USER'){\n        if(!action.response.error.status)\n        {\n            return {...state,\n                editSucMsg: \"Successfully updated your profile\"\n            }\n        }\n        else if(action.response.error.status)\n        {\n            return {...state,\n                editSucMsg: null\n            }\n        }\n    }\n    if(action.type === 'EDIT_PASSWORD'){\n        if(!action.response.error.status)\n        {\n            return {...state,\n                passSucMsg: \"Successfully updated your password\"\n            }\n        }\n        else if(action.response.error.status)\n        {\n            return {...state,\n                passSucMsg: null\n            }\n        }\n    }\n    if(action.type === 'SIGN_UP' && !action.response.error.status){\n        return {\n            ...state,\n            loginPageSuccessMessage: action.response.result.message\n        }\n    }\n    if(action.type === 'DELETE_USER' && !action.response.error.status){\n        return {\n            ...state,\n            loginPageSuccessMessage: action.response.result.message\n        }\n    }\n    if(action.type === 'CLEAR_MESSAGES'){\n        return{}\n    }\n    return state;\n}","export default (state = {isConnected:false, isSynced:false} ,action)=>{\n\n    if(action.type === 'CONNECTED_TO_SOCKET'){\n        return {...state, isConnected: true, isSynced:false, chatRoomId: action.chatRoomId};\n    }\n\n    if(action.type === 'DISCONNECTED_FROM_SOCKET'){\n        return {isConnected: false, isSynced:false};\n    }\n    if(action.type === 'GET_CHATS'){\n        return {\n            ...state,\n            isSynced: true,\n            userDetail: action.data.userDetail,\n            color: action.data.color,\n            myDetail: action.data.myDetail,\n            messages: action.data.messages\n        }\n    }\n    if(action.type === 'ADD_CHAT'){\n        return {\n            ...state,\n            messages: [...state.messages, action.response]\n        }\n    }\n    if(action.type === 'CLEAR_CHAT'){\n        return {\n            ...state,\n            messages: []\n        }\n    }\n    if(action.type === 'CHANGE_COLOR'){\n        return {\n            ...state,\n            color: action.color\n        }\n    }\n    else return state;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n    );\n\nReactDOM.render((\n<Provider store={store} >\n    <App/>\n</Provider>\n),document.querySelector('#root'));"],"sourceRoot":""}